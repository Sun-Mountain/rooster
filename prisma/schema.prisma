generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
}

enum Role {
  USER
  BETA
  ADMIN
  SUPER
}

model Address {
  id         String   @id @default(cuid())
  userId     String   @unique
  label      String
  street1    String
  street2    String?
  city       String
  state      String
  zip        String
  country    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmergencyContact {
  id         String   @id @default(cuid())
  userId     String
  name       String
  relationship String
  phoneNumber PhoneNumber?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PhoneNumber {
  id                String   @id @default(cuid())
  userId            String?   @unique
  contactId         String?   @unique
  label             String
  number            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  emergencyContact  EmergencyContact? @relation(fields: [contactId], references: [id], onDelete: Cascade)
}

model User {
  id                      String   @id @default(cuid())
  firstName               String
  lastName                String
  email                   String   @unique
  password                String
  Addresses               Address[]
  PhoneNumber             PhoneNumber?
  EmergencyContacts       EmergencyContact[]
  role                    Role      @default(USER)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}